{
    "intrebari":[
       {
          "text":"Care este paradigma limbajului de programare pe care se bazează Java?",
          "raspunsuri":[
             {
                "text":"A. Procedural",
                "corect":false
             },
             {
               "text":"B. Funcțional",
               "corect":false
            },
             {
                "text":"C. OOP",
                "corect":true,
                "explicatie":""
             },
             {
               "text":"D. Toate acestea",
               "corect":false
            }
          ]
       },
       {
         "text":"Cum definim corect un String?",
         "raspunsuri":[
            {
               "text":"A. String value = 'value';",
               "corect":false
            },
            {
              "text":"B. String value = \"value';",
              "corect":false
           },
            {
               "text":"C. String value = 'value\";",
               "corect":false
            },
            {
              "text":"D. String value = \"value\";",
               "corect":true,
               "explicatie":""
           }
         ]
       },
       {
         "text":"Care este diferența dintre List si Set?",
         "raspunsuri":[
            {
               "text":"A. List poate conține elemente null pe când Set nu poate",
               "corect":false
            },
            {
              "text":"B. Ambele colecții păstrează ordinea elementelor",
              "corect":false
           },
            {
               "text":"C. List poate conține elemente duplicate, pe când Set nu poate",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. Toate de mai sus",
              "corect":false
           }
         ]
       },
       {
         "text":"Un Map conține valori de tip:",
         "raspunsuri":[
            {
               "text":"A. perechi de tip &#60;key,value&#62;",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. elemente înșiruite",
              "corect":false
           },
            {
               "text":"C. Perechi de String-uri",
               "corect":false
            },
            {
              "text":"D. Elemente înșiruite într-o structură de tip LIFO",
              "corect":false
           }
         ]
       },
       {
         "text":"Keyword-ul folosit pentru moștenire este:",
         "raspunsuri":[
            {
               "text":"A. inherit",
               "corect":false
            },
            {
              "text":"B. implements",
              "corect":false
           },
            {
               "text":"C. throws",
               "corect":false
            },
            {
              "text":"D. extends",
               "corect":true,
               "explicatie":""
           }
         ]
       },
       {
         "text":"Cum declarăm și atribuim corect o constantă?",
         "raspunsuri":[
            {
               "text":"A. static int value = 2;",
               "corect":false
            },
            {
              "text":"B. static String value = \"value\";",
              "corect":false
           },
            {
               "text":"C. final int value = 5;",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. int x = 5;",
              "corect":false
           }
         ]
       },
       {
         "text":"Cum definim corect un obiect în Java?",
         "raspunsuri":[
            {
               "text":"A. Este o instanță a altui obiect creat în Java dintr-o clasă",
               "corect":false
            },
            {
              "text":"B. Este instanță a unei clase",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. Este instanță a unei interfețe",
               "corect":false
            },
            {
              "text":"D. Este instanță a unei clase abstracte",
              "corect":false
           }
         ]
       },
       {
         "text":"Care este diferența dintre throw si throws?",
         "raspunsuri":[
            {
               "text":"A. throw se folosește în semnătura metodei pe când throws se folosește atunci când se aruncă excepția",
               "corect":false
            },
            {
              "text":"B. throws se folosește în semnătura metodei pe când throw se folosește atunci când se aruncă excepția",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. Ambele se folosesc la definirea unei excepții",
               "corect":false
            },
            {
              "text":"D. Se folosesc doar împreuna cu try/catch",
              "corect":false
           }
         ]
       },
       {
         "text":"Ce tag HTML este folosit pentru a crea o legătură (link) către o altă pagină web?",
         "raspunsuri":[
            {
               "text":"A. &#60;a&#62;",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. &#60;div&#62;",
              "corect":false
           },
            {
               "text":"C. &#60;p&#62;",
               "corect":false
            },
            {
              "text":"D. &#60;img&#62;",
              "corect":false
           }
         ]
       },
       {
         "text":"Ce tag HTML este folosit pentru a crea o listă ordonată?",
         "raspunsuri":[
            {
               "text":"A. &#60;ul&#62;",
               "corect":false
            },
            {
              "text":"B. &#60;ol&#62;",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. &#60;li&#62;",
               "corect":false
            },
            {
              "text":"D. &#60;dl&#62;",
              "corect":false
           }
         ]
       },
       {
         "text":"Ce tag HTML este folosit pentru a lega un fișier CSS extern?",
         "raspunsuri":[
            {
               "text":"A. &#60;script&#62;",
               "corect":false
            },
            {
              "text":"B. &#60;style&#62;",
              "corect":false
           },
            {
               "text":"C. &#60;link&#62;",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. &#60;meta&#62;",
              "corect":false
           }
         ]
       },
       {
         "text":"Cum se specifică culoarea textului în CSS?",
         "raspunsuri":[
            {
               "text":"A. background-color",
               "corect":false
            },
            {
              "text":"B. font-color",
              "corect":false
           },
            {
               "text":"C. text-color",
               "corect":false
            },
            {
              "text":"D. color",
               "corect":true,
               "explicatie":""
           }
         ]
       },
       {
         "text":"Ce cuvânt cheie este folosit pentru a declara o variabilă în JavaScript(recomandat)?",
         "raspunsuri":[
            {
               "text":"A. var",
               "corect":false
            },
            {
              "text":"B. let",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. const",
               "corect":false
            },
            {
              "text":"D. variable",
              "corect":false
           }
         ]
       },
       {
         "text":"Care este sintaxa corectă pentru a declara o funcție cu funcție anonima (arrow function) în JavaScript?",
         "raspunsuri":[
            {
               "text":"A. const myFunction = () => {code}",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. function myFunction() {code}",
              "corect":false
           },
            {
               "text":"C. const myFunction = function() {code}",
               "corect":false
            },
            {
              "text":"D. const myFunction => {code}",
              "corect":false
           }
         ]
       },
       {
         "text":"Ce metodă este utilizată pentru a crea un obiect în JavaScript?",
         "raspunsuri":[
            {
               "text":"A. class Object()",
               "corect":false
            },
            {
              "text":"B. createObject()",
              "corect":false
           },
            {
               "text":"C. makeObject()",
               "corect":false
            },
            {
              "text":"D. new Object()",
               "corect":true,
               "explicatie":""
           }
         ]
       },
       {
         "text":"Rolul JVM-ului este:",
         "raspunsuri":[
            {
               "text":"A. De a interpreta codul Java în Bytecode",
               "corect":false
            },
            {
              "text":"B. De a interpreta codul Java în Cod masina",
              "corect":false
           },
            {
               "text":"C. De a interpreta Bytecodul în Cod masina",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. Niciuna de mai sus",
              "corect":false
           }
         ]
       },
       {
         "text":"O variabila de tip long este definită corect astfel:",
         "raspunsuri":[
            {
               "text":"A. long value = 1231.2f;",
               "corect":false
            },
            {
              "text":"B. long value = 10000L;",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. long value = 123;",
               "corect":false
            },
            {
              "text":"D. long value = 231.2;",
              "corect":false
           }
         ]
       },
       {
         "text":"Cum ieșim forțat dintr-o buclă?",
         "raspunsuri":[
            {
               "text":"A. Folosind keywordul: break",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. Folosind keywordul: continue",
              "corect":false
           },
            {
               "text":"C. Folosind keywordul: switch",
               "corect":false
            },
            {
              "text":"D. Folosind keywordul: while",
              "corect":false
           }
         ]
       },
       {
         "text":"Un constructor în Java este folosit pentru?",
         "raspunsuri":[
            {
               "text":"A. A defini corect field-urile din clasă",
               "corect":false
            },
            {
              "text":"B. Pentru a se putea realiza moștenirea",
              "corect":false
           },
            {
               "text":"C. Pentru a permite construirea obiectelor/instanțelor",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. Toate de mai sus",
              "corect":false
           }
         ]
       },
       {
         "text":"Dacă avem o metodă numita \"execute\" care aruncă o excepție de tip \"Exception\" aceasta va avea în semnătura ei:",
         "raspunsuri":[
            {
               "text":"A. throw Exception",
               "corect":false
            },
            {
              "text":"B. try Exception",
              "corect":false
           },
            {
               "text":"C. throws Exception",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. finally Exception",
              "corect":false
           }
         ]
       },
       {
         "text":"Alegeți varianta corecta:",
         "raspunsuri":[
            {
               "text":"A. O listă conține elemente duplicate",
               "corect":false
            },
            {
              "text":"B. O listă păstrează ordinea elementelor",
              "corect":false
           },
            {
               "text":"C. O listă este o înșiruire de elemente",
               "corect":false
            },
            {
              "text":"D. Toate de mai sus",
               "corect":true,
               "explicatie":""
           }
         ]
       },
       {
         "text":"Ce obligație avem atunci când extindem o clasă abstractă?",
         "raspunsuri":[
            {
               "text":"A. Să suprascriem constructorul",
               "corect":false
            },
            {
              "text":"B. Să implementăm metodele abstracte",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. Să folosim super",
               "corect":false
            },
            {
              "text":"D. Nicio varianta de mai sus",
              "corect":false
           }
         ]
       },
       {
         "text":"Care este tag-ul HTML corect pentru a introduce o imagine?",
         "raspunsuri":[
            {
               "text":"A. &#60;img src=\"image.jpg\" alt=\"My Image\">&#62;",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. &#60;image src=\"image.jpg\" alt=\"My Image\">&#62;",
              "corect":false
           },
            {
               "text":"C. &#60;img href=\"image.jpg\" alt=\"My Image\">&#62;",
               "corect":false
            },
            {
              "text":"D. &#60;img alt=\"My Image\">&#62;",
              "corect":false
           }
         ]
       },
       {
         "text":"Cum se specifică o linie orizontală în HTML?",
         "raspunsuri":[
            {
               "text":"A. &#60;br&#62;",
               "corect":false
            },
            {
              "text":"B. &#60;hr&#62;",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. &#60;line&#62;",
               "corect":false
            },
            {
              "text":"D. &#60;tr&#62;",
              "corect":false
           }
         ]
       },
       {
         "text":"Cum se specifică stilurile CSS direct în interiorul unui document HTML?",
         "raspunsuri":[
            {
               "text":"A. &#60;link&#62;",
               "corect":false
            },
            {
              "text":"B. &#60;style&#62;",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. &#60;script&#62;",
               "corect":false
            },
            {
              "text":"D. &#60;css&#62;",
              "corect":false
           }
         ]
       },
       {
         "text":"Ce selecție CSS va aplica stilurile la toate elementele de tip &#60;h1&#62?",
         "raspunsuri":[
            {
               "text":"A. .h1",
               "corect":false
            },
            {
              "text":"B. h1",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. #h1",
               "corect":false
            },
            {
              "text":"D. Nu se poate realiza selecția",
              "corect":false
           }
         ]
       },
       {
         "text":"Care este sintaxa corectă pentru o declarație \"if\" în JavaScript?",
         "raspunsuri":[
            {
               "text":"A. if (condition) {code}",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. if {condition} then {code}",
              "corect":false
           },
            {
               "text":"C. if (condition) => {code}",
               "corect":false
            },
            {
              "text":"D. if {condition} {code}",
              "corect":false
           }
         ]
       },
       {
         "text":"Ce acronim reprezintă XHR în JavaScript?",
         "raspunsuri":[
            {
               "text":"A. XMLHTTP Request",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. Xtra High Resolution",
              "corect":false
           },
            {
               "text":"C. Xtra Hyperlink Response",
               "corect":false
            },
            {
              "text":"D. Hyper Request",
              "corect":false
           }
         ]
       },
       {
         "text":"Ce cuvânt cheie este utilizat pentru a returna o valoare dintr-o funcție în JavaScript?",
         "raspunsuri":[
            {
               "text":"A. exit",
               "corect":false
            },
            {
              "text":"B. break",
              "corect":false
           },
            {
               "text":"C. return",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. stop",
              "corect":false
           }
         ]
       },
       {
         "text":"Cum se adaugă un element într-un element HTML existent folosind JavaScript?",
         "raspunsuri":[
            {
               "text":"A. element.appendChild(newElement)",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. element.createChild(newElement)",
              "corect":false
           },
            {
               "text":"C. element.add(newElement)",
               "corect":false
            },
            {
              "text":"D. element.insert(newElement)",
              "corect":false
           }
         ]
       },
       {
         "text":"În blocul de decizie 'if' argumentul trebuie să fie de tip:",
         "raspunsuri":[
            {
               "text":"A. String",
               "corect":false
            },
            {
              "text":"B. int",
              "corect":false
           },
            {
               "text":"C. double",
               "corect":false
            },
            {
              "text":"D. boolean",
               "corect":true,
               "explicatie":""
           }
         ]
       },
       {
         "text":"Linia de cod <System.out.println(1 + \"2\");> va afișa la consolă:",
         "raspunsuri":[
            {
               "text":"A. 3",
               "corect":false
            },
            {
              "text":"B. 1 + 2",
              "corect":false
           },
            {
               "text":"C. 12",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. 2",
              "corect":false
           }
         ]
       },
       {
         "text":"Metoda corectă pentru a adăuga un element într-o listă este:",
         "raspunsuri":[
            {
               "text":"A. put",
               "corect":false
            },
            {
              "text":"B. push",
              "corect":false
           },
            {
               "text":"C. add",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. pop",
              "corect":false
           }
         ]
       },
       {
         "text":"Cum implementăm corect o interfata?",
         "raspunsuri":[
            {
               "text":"A. Definim o clasă și folosim keywordul 'implements' urmat de numele interfeței",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. Definim o interfață și folosim keywordul 'implements' urmat de numele interfeței",
              "corect":false
           },
            {
               "text":"C. Definim un enum si folosim keywordul 'implements' urmat de numele interfeței",
               "corect":false
            },
            {
              "text":"D. Definim o clasă și folosim keywordul 'extends' urmat de numele interfeței",
              "corect":false
           }
         ]
       },
       {
         "text":"Referitor la blocurile try/catch alegeți varianta corecta de mai jos:",
         "raspunsuri":[
            {
               "text":"A. try poate fi folosit într-o funcție pentru care avem throws în semnătura sa",
               "corect":false
            },
            {
              "text":"B. try/catch nu pot fi folosite fără finally",
              "corect":false
           },
            {
               "text":"C. try/catch se foloseste obligatoriu atunci cand aruncăm o exceptie",
               "corect":false
            },
            {
              "text":"D. try/catch se folosesc împreună în executia unui bloc de cod ce aruncă o excepție",
               "corect":true,
               "explicatie":""
           }
         ]
       },
       {
         "text":"Alegeți varianta corectă pentru definirea și atribuirea unei constante statice de tip String.",
         "raspunsuri":[
            {
               "text":"A. public final static String VALUE = 'value';",
               "corect":false
            },
            {
              "text":"B. public final static String VALUE = \"value\";",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. public static String final VALUE = \"value\";",
               "corect":false
            },
            {
              "text":"D. public final static String VALUE;",
              "corect":false
           }
         ]
       },
       {
         "text":"Moștenirea definește:",
         "raspunsuri":[
            {
               "text":"A. Principiul prin care o clasă preia valorile constructorului din clasa de baza",
               "corect":false
            },
            {
              "text":"B. Principiul prin care mostenim funcțiile 'equals' si 'hashCode'",
              "corect":false
           },
            {
               "text":"C. Principiul prin care o clasă preia comportamentul clasei pe care o moștenește",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. Principiul prin care o clasă implementează o interfață",
              "corect":false
           }
         ]
       },
       {
         "text":"In Java, tentativa de a introduce un element deja existent într-un set:",
         "raspunsuri":[
            {
               "text":"A. Generează o excepție",
               "corect":false
            },
            {
              "text":"B. Adaugă elementul în set și generează o excepție",
              "corect":false
           },
            {
               "text":"C. Nu adaugă elementul în set și nu se generează nicio excepție",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. Adaugă elementul în set și nu se generază nicio excepție",
              "corect":false
           }
         ]
       },
       {
         "text":"Ce tag HTML este folosit pentru a crea o listă neordonată?",
         "raspunsuri":[
            {
               "text":"A. &#60;ul&#62;",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. &#60;ol&#62;",
              "corect":false
           },
            {
               "text":"C. &#60;li&#62;",
               "corect":false
            },
            {
              "text":"D. &#60;dl&#62;",
              "corect":false
           }
         ]
       },
       {
         "text":"Cum se specifică un comentariu în codul HTML?",
         "raspunsuri":[
            {
               "text":"A. # comentariu",
               "corect":false
            },
            {
              "text":"B. // comentariu",
              "corect":false
           },
            {
               "text":"C. /* comentariu */",
               "corect":false
            },
            {
              "text":"D. &#60;!-- comentariu --&#62;",
               "corect":true,
               "explicatie":""
           }
         ]
       },
       {
         "text":"Care este ultimul stil aplicat unui element în cazul CSS?",
         "raspunsuri":[
            {
               "text":"A. fișier extern",
               "corect":false
            },
            {
              "text":"B. stil declarat în &#60;head&#62;",
              "corect":false
           },
            {
               "text":"C. stil inline",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"D. toate cele de mai sus",
              "corect":false
           }
         ]
       },
       {
         "text":"Ce proprietate CSS este folosită pentru a seta spațiul între marginile interne ale unui element?",
         "raspunsuri":[
            {
               "text":"A. margin",
               "corect":false
            },
            {
              "text":"B. padding",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. space",
               "corect":false
            },
            {
              "text":"D. border",
              "corect":false
           }
         ]
       },
       {
         "text":"Cum se accesează o proprietate a unui obiect în JavaScript?",
         "raspunsuri":[
            {
               "text":"A. object.property",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. object{property}",
              "corect":false
           },
            {
               "text":"C. object->property",
               "corect":false
            },
            {
              "text":"D. object::property",
              "corect":false
           }
         ]
       },
       {
         "text":"Ce acronim reprezintă JSON în JavaScript?",
         "raspunsuri":[
            {
               "text":"A. JavaScript Object Notation",
               "corect":true,
               "explicatie":""
            },
            {
              "text":"B. Java Syntax Object Notation",
              "corect":false
           },
            {
               "text":"C. JavaScript Object Network",
               "corect":false
            },
            {
              "text":"D. Java Syntax Oriented Network",
              "corect":false
           }
         ]
       },
       {
         "text":"Ce cuvânt cheie este utilizat pentru a ieși dintr-o buclă în JavaScript?",
         "raspunsuri":[
            {
               "text":"A. return",
               "corect":false
            },
            {
              "text":"B. break",
               "corect":true,
               "explicatie":""
           },
            {
               "text":"C. exit",
               "corect":false
            },
            {
              "text":"D. stop",
              "corect":false
           }
         ]
       }
    ]
 }
